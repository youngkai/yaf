<?php
namespace Bin\rpc;

/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
use Thrift\Base\TBase;
use Thrift\Type\TType;
use Thrift\Type\TMessageType;
use Thrift\Exception\TException;
use Thrift\Exception\TProtocolException;
use Thrift\Protocol\TProtocol;
use Thrift\Protocol\TBinaryProtocolAccelerated;
use Thrift\Exception\TApplicationException;


final class RetCode {
  const SUCCESS = 0;
  const PARAM_ERROR = 1000;
  const ACCESS_DENY = 1001;
  static public $__names = array(
    0 => 'SUCCESS',
    1000 => 'PARAM_ERROR',
    1001 => 'ACCESS_DENY',
  );
}

class Message {
  static $_TSPEC;

  /**
   * @var int
   */
  public $send_uid = null;
  /**
   * @var int
   */
  public $recv_uid = null;
  /**
   * @var int
   */
  public $channel_id = null;
  /**
   * @var string
   */
  public $name = null;
  /**
   * @var string
   */
  public $result = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'send_uid',
          'type' => TType::I64,
          ),
        2 => array(
          'var' => 'recv_uid',
          'type' => TType::I64,
          ),
        3 => array(
          'var' => 'channel_id',
          'type' => TType::I64,
          ),
        4 => array(
          'var' => 'name',
          'type' => TType::STRING,
          ),
        5 => array(
          'var' => 'result',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      if (isset($vals['send_uid'])) {
        $this->send_uid = $vals['send_uid'];
      }
      if (isset($vals['recv_uid'])) {
        $this->recv_uid = $vals['recv_uid'];
      }
      if (isset($vals['channel_id'])) {
        $this->channel_id = $vals['channel_id'];
      }
      if (isset($vals['name'])) {
        $this->name = $vals['name'];
      }
      if (isset($vals['result'])) {
        $this->result = $vals['result'];
      }
    }
  }

  public function getName() {
    return 'Message';
  }

  public function read($input)
  {
    $xfer = 0;
    $fname = null;
    $ftype = 0;
    $fid = 0;
    $xfer += $input->readStructBegin($fname);
    while (true)
    {
      $xfer += $input->readFieldBegin($fname, $ftype, $fid);
      if ($ftype == TType::STOP) {
        break;
      }
      switch ($fid)
      {
        case 1:
          if ($ftype == TType::I64) {
            $xfer += $input->readI64($this->send_uid);
          } else {
            $xfer += $input->skip($ftype);
          }
          break;
        case 2:
          if ($ftype == TType::I64) {
            $xfer += $input->readI64($this->recv_uid);
          } else {
            $xfer += $input->skip($ftype);
          }
          break;
        case 3:
          if ($ftype == TType::I64) {
            $xfer += $input->readI64($this->channel_id);
          } else {
            $xfer += $input->skip($ftype);
          }
          break;
        case 4:
          if ($ftype == TType::STRING) {
            $xfer += $input->readString($this->name);
          } else {
            $xfer += $input->skip($ftype);
          }
          break;
        case 5:
          if ($ftype == TType::STRING) {
            $xfer += $input->readString($this->result);
          } else {
            $xfer += $input->skip($ftype);
          }
          break;
        default:
          $xfer += $input->skip($ftype);
          break;
      }
      $xfer += $input->readFieldEnd();
    }
    $xfer += $input->readStructEnd();
    return $xfer;
  }

  public function write($output) {
    $xfer = 0;
    $xfer += $output->writeStructBegin('Message');
    if ($this->send_uid !== null) {
      $xfer += $output->writeFieldBegin('send_uid', TType::I64, 1);
      $xfer += $output->writeI64($this->send_uid);
      $xfer += $output->writeFieldEnd();
    }
    if ($this->recv_uid !== null) {
      $xfer += $output->writeFieldBegin('recv_uid', TType::I64, 2);
      $xfer += $output->writeI64($this->recv_uid);
      $xfer += $output->writeFieldEnd();
    }
    if ($this->channel_id !== null) {
      $xfer += $output->writeFieldBegin('channel_id', TType::I64, 3);
      $xfer += $output->writeI64($this->channel_id);
      $xfer += $output->writeFieldEnd();
    }
    if ($this->name !== null) {
      $xfer += $output->writeFieldBegin('name', TType::STRING, 4);
      $xfer += $output->writeString($this->name);
      $xfer += $output->writeFieldEnd();
    }
    if ($this->result !== null) {
      $xfer += $output->writeFieldBegin('result', TType::STRING, 5);
      $xfer += $output->writeString($this->result);
      $xfer += $output->writeFieldEnd();
    }
    $xfer += $output->writeFieldStop();
    $xfer += $output->writeStructEnd();
    return $xfer;
  }

}


